<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iceps.spring.shardingjdbc1.mapper.OrderMapper">


	<resultMap id="BaseResultMap" type="com.iceps.spring.shardingjdbc1.model.Order">
		<id column="order_id" property="orderId" jdbcType="VARCHAR" />
		<result column="cust_id" property="custId" jdbcType="INTEGER" />
		<result column="prod_id" property="prodId" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="amount" property="amount" jdbcType="DECIMAL" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="sharding_key" property="shardingKey" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		order_id, cust_id, prod_id, user_id, amount, remark, sharding_key
	</sql>
	<insert id="insert" parameterType="com.iceps.spring.shardingjdbc1.model.User">
		insert into t_order (order_id, cust_id, prod_id, user_id, amount, remark, sharding_key)
		values (
		#{orderId,jdbcType=VARCHAR},
		#{custId,jdbcType=INTEGER},
		#{prodId,jdbcType=INTEGER},
		#{userId,jdbcType=INTEGER},
		#{amount,jdbcType=DECIMAL},
		#{remark,jdbcType=VARCHAR},
		#{shardingKey,jdbcType=INTEGER}
		)
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.iceps.spring.shardingjdbc1.model.User">
		update t_order
		set
		cust_id   = #{custId,jdbcType=INTEGER},
		prod_id   = #{prodId,jdbcType=INTEGER},
		user_id   = #{userId,jdbcType=INTEGER},
		amount    = #{amount,jdbcType=DECIMAL},
		remark    = #{remark,jdbcType=VARCHAR},
		sharding_key    = #{shardingKey,jdbcType=INTEGER}
		where
		order_id  = #{orderId,jdbcType=VARCHAR}
	</update>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_order
		where
		order_id  = #{orderId,jdbcType=VARCHAR}
	</delete>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_order
		where
		order_id  = #{orderId,jdbcType=VARCHAR}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_order
	</select>
	
	<select id="selectAllOr" resultMap="BaseResultMap">
		select	
		<include refid="Base_Column_List" />
		from t_order a
		where
		<![CDATA[
		(a.order_id = '32024140' or a.order_id = '105107021')
		order by a.order_id
		]]>
	</select>
	<select id="selectAllOrderBy" resultMap="BaseResultMap">
		select	
		<include refid="Base_Column_List" />
		from t_order a
		<![CDATA[
		order by a.order_id
		]]>
	</select>
	<select id="selectAllLike" resultMap="BaseResultMap">
		select	
		<include refid="Base_Column_List" />
		from t_order a
		where
		<![CDATA[
		a.order_id like '%2'
		order by a.order_id
		]]>
	</select>
	<select id="selectAllIn" resultMap="BaseResultMap">
		select	
		<include refid="Base_Column_List" />
		from t_order a
		where
		<![CDATA[
		a.order_id in ('32024140','105107021','70660852','19979788')
		order by a.order_id
		]]>
	</select>
	<select id="selectAllRange" resultMap="BaseResultMap">
		select	
		<include refid="Base_Column_List" />
		from t_order a
		where
		<![CDATA[
		a.order_id >= '32024140' and a.order_id <= '35024140'
		order by a.order_id
		]]>
	</select>
	<select id="selectDistinct" resultMap="BaseResultMap">
		select 
		distinct a.prod_id
		from t_order a
		where
		<![CDATA[
		order by a.prod_id
		]]>
	</select>
	<select id="selectUnion" resultMap="BaseResultMap">
		select 		
		<include refid="Base_Column_List" />
		from t_order
		where
		prod_id = 1
		union		
		select 		
		<include refid="Base_Column_List" />
		from t_order
		where
		prod_id = 2
	</select>
	<select id="selectByUserId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_order
		where
		user_id = #{userId,jdbcType=INTEGER}
	</select>
</mapper>